Secrets Management
with Ansible-Vault and AWS Encryption SDK
Tags: secrets managment, ansible-vault, AWS Encryption SDK

Flannon Jackson

* Overview

- This is a test to evaluate if an encryption solutions can be used as a stand alone secrets management utility.

* Initial Assumptions

- Encrypted passwords will be stored in private repositories

- The operating systemâ€™s security context is implicitly trusted, values from configuration files and exported environment variables are assumed to be trusted, even though environment variables are viewable by any user with sufficient privileges:
    `sudo cat /proc/*/environ`

- The evaluation criteria are whether or not the software can be used to encrypt and decrypt a saved secret, and export it as an environment variable.

- Why environment variables?

* Test candidates

- Ansible-vault
- AWS Encryption SDK
- Hiera with eyaml (not yet evaluated)
- sops from Mozilla (not yet evaluated):  [[https://jve.linuxwall.info/blog/index.php?post/2015/10/01/Introducing-Sops%3A-an-editor-of-encrypted-file-that-uses-AWS-KMS-and-PGP][sops]]


* Ansible-vault

- ansible-vault is an add-on utility for ansible that can be used to manage encrypted values in playbooks, or as a stand alone utility to encrypt and decrypt files, or to encrypt values and save them in a yaml file.

- It can be used on the command line to encrypt a values

    `ansible-vault encrypt_string 'mysecretword' --name APP_KEY_1 \
    --vault-password-file=.ansible-vault-secrets/vault_password >> ~/.ansible-vault-secrets/secrets.yml`

- The location of the top level vault password can be set with an environment varialbe

    export ANSIBLE_VAULT_PASSWORD_FILE="${HOME}/.ansible-vault-secrets/vault_password"

- This makes it a little easier to to use,

    `ansible-vault encrypt_string 'mysecretword' --name APP_KEY_2 >> \
     ~/.ansible-vault-secrets/secrets.yml`

* secrets.yml

- ansible-vault writes extended yaml output that splits the encripted value with newline characters after 80 characters

    APP_KEY_1: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      33326433393966336633656365396138366130656431383330343066356463663062323866653538
      3965313064323135316538623533316461306337366361350a303363376331623965656532376465
      65393934646665336164613437663261626235626532373661316434383466383233396538396365
      3062343065623534310a373136343462343866656561356639373233633233343837333832396239
      3539

* Issues

- Ansible-vault provides full support for encrypting and decrypting files, and encrypting words, it doesn't have a direct mechanism for decrypting words saved in the ansible secrets.yml file.

- My first attempt at decrypting the ansible secret was a bit of an ugly shell script

    avdecrypt.sh APP_KEY_1 ~/.ansible-vault-secrets/secrets.yml

* A better solution is possible with python.

- avdecrypt.py

    avdecrypt.py

- Reads encrypted secrets from $HOME/.ansible-vault-secrets/secrets.yaml
- Writes decrypted secrets to $HOME/.ansible-vault-secrets/decrypted
- Decrypted secrets can be exported as environment variables by sourcing the decrypted file from your .bashrc

       source ${HOME}/.ansible-vault-secrets/decrypted



* AWS Encryption SDK CLI

- encrypt

      ./aws-decrypt.sh -e my-super-secret-word

- decrypt

      ./aws-decrypt.sh -d AYADeCeD0+SnhbHbq4cGq5Vy1jEAXwABABVhd3MtY3J5cHRvLXB1YmxpYy1rZXkAREE0TDJLR1hKVW45aHBFT1RuVE12bmhSbzVUdWpFMTYwamUwSWRSZnI4eXJZWFozU3lUaElXc1R5NVpzVkFpNDZyZz09AAEAB2F3cy1rbXMAS2Fybjphd3M6a21zOnVzLWVhc3QtMTozOTUzNjI0NzE4Mjc6a2V5L2ZiYjI5NGViLTA3ZjktNDY0NC04NmUzLWQ3YzI5NmUxZmJmZQC4AQIBAHjWjmXthCNmR3K/prQA8U0NSiPgBYq1RHMFTVRJk8+1rAG1DSi1qQvTjs+1Co+EWVv+AAAAfjB8BgkqhkiG9w0BBwagbzBtAgEAMGgGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMGbMcnSNUVwdXi1LGAgEQgDuuOndpi3p4mPCnkak2Sr0NcduGL4WvaDzuZFBd1EmnjyEYNmfS4moOz640kA/PgZMpzXVqOrzWsFUYJgIAAAAADAAAEAAAAAAAAAAAAAAAAAATwQyK8urpTPvsJl8+lJk//////wAAAAEAAAAAAAAAAAAAAAEAAAAVDkClFwLQx6fPpl0D7C2PGla+QACOE8ed2j9MMMUlCSOn33hG+gBnMGUCMCryPjhvqDdSsbzUOH3BA8Rcz6cq+IcHvzfcNVAdCg0u62cJfES8pc7BnKFeOFdFvQIxAMiIPaPv840itZpAI+t70v8W+wJrpvQUnu4jSMs0l8b24P4i+bIMkE933Y3xZ2KdQQ==

* AWS Encryption SDK

- encrypt

    aws-encrypt.py --encrypt TEST secret-updated

- decrypt

      ./aws-encrypt.py --decrypt TEST
